{"version":3,"sources":["component/styles.module.css","component/Form/Form.js","component/Contact/Contact.js","component/Search/Search.js","App.js","index.js"],"names":["module","exports","Form","contactList","onSubmit","useState","name","setName","number","setNumber","InputValues","evt","currentTarget","value","resetInputValues","idName","shortid","generate","idNumber","className","style","form","lengthInputNemeChech","length","lengthInputNumberChech","preventDefault","alert","id","htmlFor","labelName","type","onChange","autoComplete","labelNumber","pattern","btnForm","СontactList","onDeleted","map","btnList","onClick","Search","containerSearch","labelSearch","inputSearch","Mobile","JSON","parse","localStorage","getItem","contacts","setContacts","filter","setFilter","useEffect","window","setItem","stringify","container","headingForm","NewContact","newName","numbers","some","Object","values","join","velue","e","filterValues","toLowerCase","contact","includes","contactId","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.37b12dbb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__2UmyX\",\"headingForm\":\"styles_headingForm__3SKXj\",\"contactList\":\"styles_contactList__pCZKW\",\"form\":\"styles_form__3J4Zo\",\"labelName\":\"styles_labelName__17tf_\",\"labelNumber\":\"styles_labelNumber__3BWDs\",\"btnForm\":\"styles_btnForm__1i41r\",\"containerSearch\":\"styles_containerSearch___O0Dq\",\"btnList\":\"styles_btnList__2cLxV\"};","import { useState } from \"react\";\nimport shortid from \"shortid\";\nimport style from \"../styles.module.css\";\n\nexport default function Form({ contactList, onSubmit }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const InputValues = (evt) => {\n    const { name, value } = evt.currentTarget;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n  const addContact = (evt) => {\n    const lengthInputNemeChech = name.length;\n    const lengthInputNumberChech = number.length;\n    evt.preventDefault();\n    if (lengthInputNemeChech < 2 || lengthInputNemeChech > 10) {\n      alert('Введіть ім\"я більше 1-го символа і не більше 10');\n      return;\n    }\n    if (lengthInputNumberChech < 7 || lengthInputNumberChech > 10) {\n      alert(\"Введіть номер більше 7-ми цифр і не більше 10\");\n      return;\n    }\n\n    const checkName = contactList(name);\n    if (checkName) {\n      alert('Це ім\"я вже існує');\n\n      return;\n    }\n    onSubmit({\n      id: shortid.generate(),\n      name,\n      number,\n    });\n    resetInputValues();\n  };\n\n  const resetInputValues = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n  const idName = shortid.generate();\n  const idNumber = shortid.generate();\n  return (\n    <form className={style.form} onSubmit={addContact}>\n      <label htmlFor={idName} className={style.labelName}>\n        Name\n      </label>\n      <input\n        id={idName}\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        onChange={InputValues}\n        autoComplete=\"off\"\n      ></input>\n      <label htmlFor={idNumber} className={style.labelNumber}>\n        Number\n      </label>\n      <input\n        id={idNumber}\n        type=\"tel\"\n        pattern=\"^[ 0-9]+$\"\n        name=\"number\"\n        value={number}\n        onChange={InputValues}\n        autoComplete=\"off\"\n      ></input>\n      <button className={style.btnForm} type=\"submite\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\n\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport style from \"../styles.module.css\";\n\nexport default function СontactList({ contactList, onDeleted }) {\n  return (\n    <ul className={\"js-list\"}>\n      {contactList.map(({ id, name, number }) => {\n        return (\n          <li key={id}>\n            {name}: {number}\n            <button\n              className={style.btnList}\n              type=\"button\"\n              onClick={() => onDeleted(id)}\n            >\n              Видалити\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nСontactList.propTypes = {\n  contactList: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  onDeleted: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport shortid from \"shortid\";\n\nimport style from \"../styles.module.css\";\nexport default function Search({ value, Search }) {\n  const id = shortid.generate();\n  return (\n    <div className={style.containerSearch}>\n      <label className={style.labelSearch} htmlFor={id}>\n        Поиск контакта по имени\n      </label>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={Search}\n        id={id}\n        className={style.inputSearch}\n      ></input>\n    </div>\n  );\n}\nSearch.propTypes = {\n  velue: PropTypes.string.isRequired,\n  Search: PropTypes.func.isRequired,\n};\n","//import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport style from \"./component/styles.module.css\";\nimport Form from \"./component/Form/Form\";\nimport ContactList from \"./component/Contact/Contact\";\nimport Search from \"./component/Search/Search\";\n\nexport default function Mobile() {\n  const [contacts, setContacts] = useState(() => {\n    return JSON.parse(localStorage.getItem(\"contacts\")) ?? [];\n  });\n  const [filter, setFilter] = useState(\"\");\n  useEffect(() => {\n    window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n\n\n  const addContact = (NewContact) => {\n    setContacts([NewContact, ...contacts]);\n  };\n\n  const veluesFilter = (e) => {\n    const { value } = e.currentTarget;\n    setFilter(value);\n  };\n  const getFilter = (e) => {\n    const filterValues = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filterValues)\n    );\n  };\n\n  const onCheckName = (newName, numbers) => {\n    return contacts.some(\n      ({ name }) => name === Object.values(newName).join(\"\")\n    );\n  };\n\n  const deletedContact = (contactId) => {\n    setContacts(contacts.filter(\n      (contact) => contact.id !== contactId\n    ));\n  };\n\n  return (\n    <div className={style.container}>\n      <h1 className={style.headingForm}>Телефонна книга</h1>\n      <Form onSubmit={addContact} contactList={onCheckName} />\n      <h2 className={style.contactList}>Контакти</h2>\n      <Search velue={filter} Search={veluesFilter} />\n      <ContactList\n        contactList={getFilter}\n        onDeleted={deletedContact}\n      />\n    </div>\n  );\n}\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}